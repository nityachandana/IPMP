#include <iostream>

using namespace std;
int ceilsearch(int a[],int l,int h,int x)
{
    if(a[l]>=x)
    {
        return l;
    }
    if(a[h]<x)
    {
        return -1;
    }
    int m=(l+h)/2;
    if(a[m]>=x && a[m-1]<x)
    {
        return m;
    }
    else if(a[m]<x)
    {
        ceilsearch(a,m+1,h,x);
    }
    else return ceilsearch(a,l,m-1,x);
}
int floorsearch(int a[],int l,int h,int x)
{
    if(a[h]<=x)
    {
        return h;
    }
    if(a[l]>x)
    {
        return -1;
    }
    int m=(l+h)/2;
    if(a[m]<=x && a[m+1]>x)
    {
        return m;
    }
    else if(a[m]>x)
    {
        return floorsearch(a,l,m-1,x);
    }
    else return floorsearch(a,m+1,h,x);
}
void unsortedarray(int a[],int n)
{
    int s=0,e=n-1;
    for(int i=0;i<n;i++)
    {
        if(a[i]>a[i+1])
        {
            s=i;
            break;
        }
    }
    for(int i=n;i>0;i--)
    {
        if(a[i]<a[i-1])
        {
            e=i;
            break;
        }
    }
    cout<<s<<","<<e<<endl;
    int min=s;
    for(int i=s+1;i<e;i++)
    {
        if(a[i]<a[min])
        {
            min=i;
        }
    }
    int max=e;
    for(int i=s;i<e-1;i++)
    {
        if(a[i]>a[max])
        {
            max=i;
        }
    }
    cout<<a[min]<<","<<a[max]<<endl;
    s=ceilsearch(a,0,s-1,a[min]);
    e=floorsearch(a,e+1,n,a[max]);
    cout<<s<<","<<e<<endl;
}
int main()
{
    int arr[] = {10, 12, 26, 30, 25,
                 40, 32, 31, 35, 50, 60};
    int arr_size=sizeof(arr)/sizeof(int);
   unsortedarray(arr,arr_size);
    return 0;
}
