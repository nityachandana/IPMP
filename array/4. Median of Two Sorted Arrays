class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
         vector<int> a;
        int i=0,j=0;
        while(i<nums1.size() && j<nums2.size())
        {
            if(nums1[i]<nums2[j])
            {
                a.push_back(nums1[i]);
                i++;
            }
            else
            {
                a.push_back(nums2[j]);
                j++;
            }
        }
        while(i<nums1.size())
        {
            a.push_back(nums1[i]);
            i++;
        }
        while(j<nums2.size())
        {
            a.push_back(nums2[j]);
            j++;
        }
        for(int i=0;i<a.size();i++)
        {
            cout<<a[i]<<endl;
        }
        if(a.size()%2==0)
        {
            int m=a.size()/2;
            int n=m-1;
            double x=((double)a[m]+(double)a[n])/2.0;
            cout<<"x="<<x<<endl;
            return x;
        }
        else
        {
            int m=a.size()/2;
            return a[m];
        }
    }
};
